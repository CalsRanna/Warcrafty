const t = require("../lib/types");

module.exports = {
  id: t.int32le,
  category: t.int32le,
  displayType: t.int32le,
  mechanic: t.int32le,
  attributes: t.int32le,
  attributesExtra_1: t.int32le,
  attributesExtra_2: t.int32le,
  attributesExtra_3: t.int32le,
  attributesExtra_4: t.int32le,
  attributesExtra_5: t.int32le,
  attributesExtra_6: t.int32le,
  attributesExtra_7: t.int32le,
  stances: t.int32le,
  unk_13: t.int32le,
  stanceNot: t.int32le,
  unk_15: t.int32le,
  targets: t.int32le,
  targetCreatureType: t.int32le,
  requireSpellFoucus: t.int32le,
  facingCasterFlags: t.int32le,
  casterAuraState: t.int32le,
  targetAuraState: t.int32le,
  excludeCasterAuraState: t.int32le,
  excludeTargetAuraState: t.int32le,
  casterAuraSpell: t.int32le,
  targetAuraSpell: t.int32le,
  excludeCasterAuraSpell: t.int32le,
  excludeTargetAuraSpell: t.int32le,
  castingTimeIndex: t.int32le,
  recoveryTime: t.int32le,
  categoryRecoveryTime: t.int32le,
  interruptFlags: t.int32le,
  aruaInterruptFlags: t.int32le,
  channelInterruptFlags: t.int32le,
  procFlags: t.int32le,
  procChance: t.int32le,
  procCharges: t.int32le,
  maxLevel: t.int32le,
  baseLevel: t.int32le,
  spellLevel: t.int32le,
  durationIndex: t.int32le,
  powerType: t.int32le,
  manaCost: t.int32le,
  manaCostPerLevel: t.int32le,
  manaPerSecond: t.int32le,
  manaPerSecondPerLevel: t.int32le,
  randeIndex: t.int32le,
  speed: t.float32le,
  modalNextSpell: t.int32le,
  cumulativeAura: t.int32le,
  totem_1: t.int32le,
  totem_2: t.int32le,
  reagent_1: t.int32le,
  reagent_2: t.int32le,
  reagent_3: t.int32le,
  reagent_4: t.int32le,
  reagent_5: t.int32le,
  reagent_6: t.int32le,
  reagent_7: t.int32le,
  reagent_8: t.int32le,
  regentCount_1: t.int32le,
  regentCount_2: t.int32le,
  regentCount_3: t.int32le,
  regentCount_4: t.int32le,
  regentCount_5: t.int32le,
  regentCount_6: t.int32le,
  regentCount_7: t.int32le,
  regentCount_8: t.int32le,
  equippedItemClass: t.int32le,
  equippedItemSubClassMask: t.int32le,
  equippedItemInventoryTypeMask: t.int32le,
  effect_1: t.int32le,
  effect_2: t.int32le,
  effect_3: t.int32le,
  effectDieSides_1: t.int32le,
  effectDieSides_2: t.int32le,
  effectDieSides_3: t.int32le,
  effectRealPointsPerLevel_1: t.float32le,
  effectRealPointsPerLevel_2: t.float32le,
  effectRealPointsPerLevel_3: t.float32le,
  effectBasePoints_1: t.int32le,
  effectBasePoints_2: t.int32le,
  effectBasePoints_3: t.int32le,
  effectMachanic_1: t.int32le,
  effectMachanic_2: t.int32le,
  effectMachanic_3: t.int32le,
  implicitTargetA_1: t.int32le,
  implicitTargetA_2: t.int32le,
  implicitTargetA_3: t.int32le,
  implicitTargetB_1: t.int32le,
  implicitTargetB_2: t.int32le,
  implicitTargetB_3: t.int32le,
  effectRadiusIndex_1: t.int32le,
  effectRadiusIndex_2: t.int32le,
  effectRadiusIndex_3: t.int32le,
  effectAura_1: t.int32le,
  effectAura_2: t.int32le,
  effectAura_3: t.int32le,
  effectAuraPeriod_1: t.int32le,
  effectAuraPeriod_2: t.int32le,
  effectAuraPeriod_3: t.int32le,
  effectMultipleValue_1: t.float32le,
  effectMultipleValue_2: t.float32le,
  effectMultipleValue_3: t.float32le,
  effectChainTargets_1: t.int32le,
  effectChainTargets_2: t.int32le,
  effectChainTargets_3: t.int32le,
  effectItemType_1: t.int32le,
  effectItemType_2: t.int32le,
  effectItemType_3: t.int32le,
  effectMiscValueA_1: t.int32le,
  effectMiscValueA_2: t.int32le,
  effectMiscValueA_3: t.int32le,
  effectMiscValueB_1: t.int32le,
  effectMiscValueB_2: t.int32le,
  effectMiscValueB_3: t.int32le,
  effectTriggerSpell_1: t.int32le,
  effectTriggerSpell_2: t.int32le,
  effectTriggerSpell_3: t.int32le,
  effectPointsPerCombo_1: t.float32le,
  effectPointsPerCombo_2: t.float32le,
  effectPointsPerCombo_3: t.float32le,
  effectSpellClassMask_1: t.int32le,
  effectSpellClassMask_2: t.int32le,
  effectSpellClassMask_3: t.int32le,
  effectSpellClassMask_4: t.int32le,
  effectSpellClassMask_5: t.int32le,
  effectSpellClassMask_6: t.int32le,
  effectSpellClassMask_7: t.int32le,
  effectSpellClassMask_8: t.int32le,
  effectSpellClassMask_9: t.int32le,
  spellVisualID_1: t.int32le,
  spellVisualID_2: t.int32le,
  spellIconID: t.int32le,
  activeIconID: t.int32le,
  spellPriority: t.int32le,
  nameLangEnUS: t.string,
  nameLangEnGB: t.string,
  nameLangDeDE: t.string,
  nameLangEnCN: t.string,
  nameLangZhCN: t.string,
  nameLangEnTW: t.string,
  nameLangZhTW: t.string,
  nameLangEsES: t.string,
  nameLangEsMX: t.string,
  nameLangKoKR: t.string,
  nameLangFrFR: t.string,
  nameLangRuRU: t.string,
  nameLangPtPT: t.string,
  nameLangPtBR: t.string,
  nameLangItIT: t.string,
  nameLangUnk: t.string,
  nameLangMask: t.int32le,
  rankLangEnUS: t.string,
  rankLangEnGB: t.string,
  rankLangDeDE: t.string,
  rankLangEnCN: t.string,
  rankLangZhCN: t.string,
  rankLangEnTW: t.string,
  rankLangZhTW: t.string,
  rankLangEsES: t.string,
  rankLangEsMX: t.string,
  rankLangKoKR: t.string,
  rankLangFrFR: t.string,
  rankLangRuRU: t.string,
  rankLangPtPT: t.string,
  rankLangPtBR: t.string,
  rankLangItIT: t.string,
  rankLangUnk: t.string,
  rankLangMask: t.int32le,
  descriptionLangEnUS: t.string,
  descriptionLangEnGB: t.string,
  descriptionLangDeDE: t.string,
  descriptionLangEnCN: t.string,
  descriptionLangZhCN: t.string,
  descriptionLangEnTW: t.string,
  descriptionLangZhTW: t.string,
  descriptionLangEsES: t.string,
  descriptionLangEsMX: t.string,
  descriptionLangKoKR: t.string,
  descriptionLangFrFR: t.string,
  descriptionLangRuRU: t.string,
  descriptionLangPtPT: t.string,
  descriptionLangPtBR: t.string,
  descriptionLangItIT: t.string,
  descriptionLangUnk: t.string,
  descriptionLangMask: t.int32le,
  auraDescriptionLangEnUS: t.string,
  auraDescriptionLangEnGB: t.string,
  auraDescriptionLangDeDE: t.string,
  auraDescriptionLangEnCN: t.string,
  auraDescriptionLangZhCN: t.string,
  auraDescriptionLangEnTW: t.string,
  auraDescriptionLangZhTW: t.string,
  auraDescriptionLangEsES: t.string,
  auraDescriptionLangEsMX: t.string,
  auraDescriptionLangKoKR: t.string,
  auraDescriptionLangFrFR: t.string,
  auraDescriptionLangRuRU: t.string,
  auraDescriptionLangPtPT: t.string,
  auraDescriptionLangPtBR: t.string,
  auraDescriptionLangItIT: t.string,
  auraDescriptionLangUnk: t.string,
  auraDescriptionLangMask: t.int32le,
  manaCostPct: t.int32le,
  startRecoveryCategory: t.int32le,
  startRecoveryTime: t.int32le,
  maxTargetLevel: t.int32le,
  spellClassSet: t.int32le,
  spellClassMask_1: t.int32le,
  spellClassMask_2: t.int32le,
  spellClassMask_3: t.int32le,
  maxTargets: t.int32le,
  damageClass: t.int32le,
  preventionType: t.int32le,
  stanceBarOrder: t.int32le,
  effectChainAmplitude_1: t.float32le,
  effectChainAmplitude_2: t.float32le,
  effectChainAmplitude_3: t.float32le,
  minFactionID: t.int32le,
  minReputation: t.int32le,
  requiredAuraVision: t.int32le,
  requiredTotemCategoryID_1: t.int32le,
  requiredTotemCategoryID_2: t.int32le,
  requiredAreasID: t.int32le,
  schoolMask: t.int32le,
  runeCostID: t.int32le,
  spellMissileID: t.int32le,
  powerDisplayID: t.int32le,
  effectBonusMultiplier_1: t.float32le,
  effectBonusMultiplier_2: t.float32le,
  effectBonusMultiplier_3: t.float32le,
  spellDescriptionVariableID: t.int32le,
  spellDifficultyID: t.int32le,
};
